// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: get_cameras_by_room.sql

package db

import (
	"context"
)

const getcamerasByRoom = `-- name: GetcamerasByRoom :many
SELECT id, name, color, value, index
FROM cameras
WHERE room_id = $1
`

type GetcamerasByRoomRow struct {
	ID    int32
	Name  string
	Color int64
	Value string
	Index int32
}

func (q *Queries) GetcamerasByRoom(ctx context.Context, roomID int32) ([]GetcamerasByRoomRow, error) {
	rows, err := q.db.QueryContext(ctx, getcamerasByRoom, roomID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetcamerasByRoomRow
	for rows.Next() {
		var i GetcamerasByRoomRow
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Color,
			&i.Value,
			&i.Index,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
