// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: get_rooms.sql

package db

import (
	"context"
)

const getRooms = `-- name: GetRooms :many
SELECT rooms.id, rooms.name 
FROM rooms
JOIN users
ON users.id = rooms.user_id
WHERE users.username = $1
`

type GetRoomsRow struct {
	ID   int32
	Name string
}

func (q *Queries) GetRooms(ctx context.Context, username string) ([]GetRoomsRow, error) {
	rows, err := q.db.QueryContext(ctx, getRooms, username)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetRoomsRow
	for rows.Next() {
		var i GetRoomsRow
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
